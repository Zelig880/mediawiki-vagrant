--- /usr/lib/python2.7/dist-packages/keystone/cmd/cli.py.orig   2018-12-31 18:53:59.742012772 +0000
+++ /usr/lib/python2.7/dist-packages/keystone/cmd/cli.py        2018-12-31 18:57:35.621174802 +0000
@@ -217,24 +217,6 @@
                                                           default_domain['id'])
             LOG.info(_LI('User %s already exists, skipping creation.'),
                      self.username)
-
-            # Remember whether the user was enabled or not, so that we can
-            # provide useful logging output later.
-            was_enabled = user['enabled']
-
-            # To keep bootstrap idempotent, try to reset the user's password
-            # and ensure that they are enabled. This allows bootstrap to act as
-            # a recovery tool, without having to create a new user.
-            user = self.identity_manager.update_user(
-                user['id'],
-                {'enabled': True,
-                 'password': self.password})
-            LOG.info(_LI('Reset password for user %s.'), self.username)
-            if not was_enabled and user['enabled']:
-                # Although we always try to enable the user, this log message
-                # only makes sense if we know that the user was previously
-                # disabled.
-                LOG.info(_LI('Enabled user %s.'), self.username)
         except exception.UserNotFound:
             user = self.identity_manager.create_user(
                 user_ref={'name': self.username,
