vcl 4.0;
import xkey;
import std;

sub vcl_recv {
    set req.http.X-Forwarded-For = client.ip;

    # Since we expose varnish on the default port (6081) we need to rewrite
    # requests that are generated using the default wiki port (8080)
    # This needs to be done early because it's needed for PURGE calls
    if (req.url ~ ":8080") {
        set req.url = regsub(req.url, "(.*):8080/(.*)", "\1:6081/\2");
    }

    # Swift expects /lang/project/foo
    if (req.url ~ "^/images/") {
        set req.url = "/wiki/dev/" + regsub(req.url, "^/images/(.*)", "\1");
    }

    # This uses the ACL action called "purge". Basically if a request to
    # PURGE the cache comes from anywhere other than localhost, ignore it.
    if (req.method == "PURGE") {
        if (!client.ip ~ purge) {
            return (synth(405, "This IP is not allowed to send PURGE requests."));
        }

        return(hash);
    }

    # Reject any methods that aren't expected to work in the context of thumbnails
    if (req.method != "GET" && req.method != "HEAD") {
        return (synth(405, "Method not allowed"));
    }

    return(hash);
}

sub vcl_deliver {
    # If the client supports WebP and the thumbnail is popular enough, attempt to serve a WebP thumbnail instead of JPG/PNG
    if (obj.hits > 5 && req.url ~ "(?i)\.(jpg|jpeg|jpe|png)$" && req.url ~ "(?i)/thumb/" && req.http.Accept ~ "(?i)image/webp" && req.restarts == 0) {
        # Revert image URL transformation to ensure this goes to the right varnish
        set req.url = "/images/" + regsub(req.url, "^/wiki/dev/(.*)", "\1");
        # Append .webp to the request URL
        set req.url = req.url + ".webp";
        return(restart);
    }

    # The WebP thumbnail failed, fall back to the JPG/PNG one
    if (resp.status >= 400 && req.restarts >= 1 && req.url ~ "(?i)\.webp$" && req.url ~ "(?i)/thumb/") {
        # Revert image URL transformation to ensure this goes to the right varnish
        set req.url = "/images/" + regsub(req.url, "^/wiki/dev/(.*)", "\1");
        # Remove .webp from the request URL
        set req.url = regsub(req.url, "(?i)\.webp$", "");
        return(restart);
    }
}

sub vcl_backend_response {
    set beresp.http.Access-Control-Allow-Origin = "*";
}